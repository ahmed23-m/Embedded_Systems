
LCD_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000040c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  0000040c  00000480  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000048c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004bc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  000004f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e42  00000000  00000000  000005b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000725  00000000  00000000  000013f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000068b  00000000  00000000  00001b17  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000014c  00000000  00000000  000021a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000413  00000000  00000000  000022f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000006d3  00000000  00000000  00002703  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00002dd6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e0       	ldi	r30, 0x0C	; 12
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 fd 01 	call	0x3fa	; 0x3fa <main>
  7a:	0c 94 04 02 	jmp	0x408	; 0x408 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_SetPinDir>:
			PORTC = Val;
			break;
		}
		case DIO_PORTD:
		{
			PORTD = Val;
  82:	44 23       	and	r20, r20
  84:	b9 f1       	breq	.+110    	; 0xf4 <DIO_SetPinDir+0x72>
  86:	41 30       	cpi	r20, 0x01	; 1
  88:	09 f0       	breq	.+2      	; 0x8c <DIO_SetPinDir+0xa>
  8a:	6b c0       	rjmp	.+214    	; 0x162 <DIO_SetPinDir+0xe0>
  8c:	81 30       	cpi	r24, 0x01	; 1
  8e:	89 f0       	breq	.+34     	; 0xb2 <DIO_SetPinDir+0x30>
  90:	28 f0       	brcs	.+10     	; 0x9c <DIO_SetPinDir+0x1a>
  92:	82 30       	cpi	r24, 0x02	; 2
  94:	c9 f0       	breq	.+50     	; 0xc8 <DIO_SetPinDir+0x46>
  96:	83 30       	cpi	r24, 0x03	; 3
  98:	11 f1       	breq	.+68     	; 0xde <DIO_SetPinDir+0x5c>
  9a:	08 95       	ret
  9c:	2a b3       	in	r18, 0x1a	; 26
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_SetPinDir+0x26>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_SetPinDir+0x22>
  ac:	82 2b       	or	r24, r18
  ae:	8a bb       	out	0x1a, r24	; 26
  b0:	08 95       	ret
  b2:	27 b3       	in	r18, 0x17	; 23
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_SetPinDir+0x3c>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_SetPinDir+0x38>
  c2:	82 2b       	or	r24, r18
  c4:	87 bb       	out	0x17, r24	; 23
  c6:	08 95       	ret
  c8:	24 b3       	in	r18, 0x14	; 20
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_SetPinDir+0x52>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_SetPinDir+0x4e>
  d8:	82 2b       	or	r24, r18
  da:	84 bb       	out	0x14, r24	; 20
  dc:	08 95       	ret
  de:	21 b3       	in	r18, 0x11	; 17
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_SetPinDir+0x68>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_SetPinDir+0x64>
  ee:	82 2b       	or	r24, r18
  f0:	81 bb       	out	0x11, r24	; 17
  f2:	08 95       	ret
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	91 f0       	breq	.+36     	; 0x11c <DIO_SetPinDir+0x9a>
  f8:	28 f0       	brcs	.+10     	; 0x104 <DIO_SetPinDir+0x82>
  fa:	82 30       	cpi	r24, 0x02	; 2
  fc:	d9 f0       	breq	.+54     	; 0x134 <DIO_SetPinDir+0xb2>
  fe:	83 30       	cpi	r24, 0x03	; 3
 100:	29 f1       	breq	.+74     	; 0x14c <DIO_SetPinDir+0xca>
 102:	08 95       	ret
 104:	2a b3       	in	r18, 0x1a	; 26
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_SetPinDir+0x8e>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_SetPinDir+0x8a>
 114:	80 95       	com	r24
 116:	82 23       	and	r24, r18
 118:	8a bb       	out	0x1a, r24	; 26
 11a:	08 95       	ret
 11c:	27 b3       	in	r18, 0x17	; 23
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_SetPinDir+0xa6>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_SetPinDir+0xa2>
 12c:	80 95       	com	r24
 12e:	82 23       	and	r24, r18
 130:	87 bb       	out	0x17, r24	; 23
 132:	08 95       	ret
 134:	24 b3       	in	r18, 0x14	; 20
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_SetPinDir+0xbe>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_SetPinDir+0xba>
 144:	80 95       	com	r24
 146:	82 23       	and	r24, r18
 148:	84 bb       	out	0x14, r24	; 20
 14a:	08 95       	ret
 14c:	21 b3       	in	r18, 0x11	; 17
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <DIO_SetPinDir+0xd6>
 154:	88 0f       	add	r24, r24
 156:	99 1f       	adc	r25, r25
 158:	6a 95       	dec	r22
 15a:	e2 f7       	brpl	.-8      	; 0x154 <DIO_SetPinDir+0xd2>
 15c:	80 95       	com	r24
 15e:	82 23       	and	r24, r18
 160:	81 bb       	out	0x11, r24	; 17
 162:	08 95       	ret

00000164 <DIO_SetPinValue>:
		break;
	}
	
}
void DIO_SetPinValue(uint8 Port,uint8 Pin,uint8 Val){
	switch(Val)
 164:	44 23       	and	r20, r20
 166:	b9 f1       	breq	.+110    	; 0x1d6 <DIO_SetPinValue+0x72>
 168:	41 30       	cpi	r20, 0x01	; 1
 16a:	09 f0       	breq	.+2      	; 0x16e <DIO_SetPinValue+0xa>
 16c:	6b c0       	rjmp	.+214    	; 0x244 <DIO_SetPinValue+0xe0>
	{
		case DIO_PIN_HIGH:
		{
			switch(Port)
 16e:	81 30       	cpi	r24, 0x01	; 1
 170:	89 f0       	breq	.+34     	; 0x194 <DIO_SetPinValue+0x30>
 172:	28 f0       	brcs	.+10     	; 0x17e <DIO_SetPinValue+0x1a>
 174:	82 30       	cpi	r24, 0x02	; 2
 176:	c9 f0       	breq	.+50     	; 0x1aa <DIO_SetPinValue+0x46>
 178:	83 30       	cpi	r24, 0x03	; 3
 17a:	11 f1       	breq	.+68     	; 0x1c0 <DIO_SetPinValue+0x5c>
 17c:	08 95       	ret
			{
				case DIO_PORTA:
				{
					SET_BIT(PORTA,Pin);
 17e:	2b b3       	in	r18, 0x1b	; 27
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_SetPinValue+0x26>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_SetPinValue+0x22>
 18e:	82 2b       	or	r24, r18
 190:	8b bb       	out	0x1b, r24	; 27
					break;
 192:	08 95       	ret
				}
				case DIO_PORTB:
				{
					SET_BIT(PORTB,Pin);
 194:	28 b3       	in	r18, 0x18	; 24
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_SetPinValue+0x3c>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_SetPinValue+0x38>
 1a4:	82 2b       	or	r24, r18
 1a6:	88 bb       	out	0x18, r24	; 24
					break;
 1a8:	08 95       	ret
				}
				case DIO_PORTC:
				{
					SET_BIT(PORTC,Pin);
 1aa:	25 b3       	in	r18, 0x15	; 21
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_SetPinValue+0x52>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_SetPinValue+0x4e>
 1ba:	82 2b       	or	r24, r18
 1bc:	85 bb       	out	0x15, r24	; 21
					break;
 1be:	08 95       	ret
				}
				case DIO_PORTD:
				{
					SET_BIT(PORTD,Pin);
 1c0:	22 b3       	in	r18, 0x12	; 18
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <DIO_SetPinValue+0x68>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <DIO_SetPinValue+0x64>
 1d0:	82 2b       	or	r24, r18
 1d2:	82 bb       	out	0x12, r24	; 18
					break;
 1d4:	08 95       	ret
			}
			break;
		}
		case DIO_PIN_LOW:
		{
			switch(Port)
 1d6:	81 30       	cpi	r24, 0x01	; 1
 1d8:	91 f0       	breq	.+36     	; 0x1fe <DIO_SetPinValue+0x9a>
 1da:	28 f0       	brcs	.+10     	; 0x1e6 <DIO_SetPinValue+0x82>
 1dc:	82 30       	cpi	r24, 0x02	; 2
 1de:	d9 f0       	breq	.+54     	; 0x216 <DIO_SetPinValue+0xb2>
 1e0:	83 30       	cpi	r24, 0x03	; 3
 1e2:	29 f1       	breq	.+74     	; 0x22e <DIO_SetPinValue+0xca>
 1e4:	08 95       	ret
			{
				case DIO_PORTA:
				{
					CLR_BIT(PORTA,Pin);
 1e6:	2b b3       	in	r18, 0x1b	; 27
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <DIO_SetPinValue+0x8e>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	6a 95       	dec	r22
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <DIO_SetPinValue+0x8a>
 1f6:	80 95       	com	r24
 1f8:	82 23       	and	r24, r18
 1fa:	8b bb       	out	0x1b, r24	; 27
					break;
 1fc:	08 95       	ret
				}
				case DIO_PORTB:
				{
					CLR_BIT(PORTB,Pin);
 1fe:	28 b3       	in	r18, 0x18	; 24
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_SetPinValue+0xa6>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	6a 95       	dec	r22
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_SetPinValue+0xa2>
 20e:	80 95       	com	r24
 210:	82 23       	and	r24, r18
 212:	88 bb       	out	0x18, r24	; 24
					break;
 214:	08 95       	ret
				}
				case DIO_PORTC:
				{
					CLR_BIT(PORTC,Pin);
 216:	25 b3       	in	r18, 0x15	; 21
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <DIO_SetPinValue+0xbe>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <DIO_SetPinValue+0xba>
 226:	80 95       	com	r24
 228:	82 23       	and	r24, r18
 22a:	85 bb       	out	0x15, r24	; 21
					break;
 22c:	08 95       	ret
				}
				case DIO_PORTD:
				{
					CLR_BIT(PORTD,Pin);
 22e:	22 b3       	in	r18, 0x12	; 18
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_SetPinValue+0xd6>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	6a 95       	dec	r22
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_SetPinValue+0xd2>
 23e:	80 95       	com	r24
 240:	82 23       	and	r24, r18
 242:	82 bb       	out	0x12, r24	; 18
 244:	08 95       	ret

00000246 <LCD_WriteCommand>:
{
	uint8 Pos[4] = {0x80, 0xC0, 0x94, 0xD4};
		
	LCD_WriteCommand(Pos[Row] + Col);
	
}
 246:	cf 93       	push	r28
 248:	c8 2f       	mov	r28, r24
 24a:	40 e0       	ldi	r20, 0x00	; 0
 24c:	63 e0       	ldi	r22, 0x03	; 3
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinValue>
 254:	40 e0       	ldi	r20, 0x00	; 0
 256:	62 e0       	ldi	r22, 0x02	; 2
 258:	80 e0       	ldi	r24, 0x00	; 0
 25a:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinValue>
 25e:	8b b3       	in	r24, 0x1b	; 27
 260:	9c 2f       	mov	r25, r28
 262:	90 7f       	andi	r25, 0xF0	; 240
 264:	8f 70       	andi	r24, 0x0F	; 15
 266:	89 2b       	or	r24, r25
 268:	8b bb       	out	0x1b, r24	; 27
 26a:	41 e0       	ldi	r20, 0x01	; 1
 26c:	62 e0       	ldi	r22, 0x02	; 2
 26e:	80 e0       	ldi	r24, 0x00	; 0
 270:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinValue>
 274:	8f e9       	ldi	r24, 0x9F	; 159
 276:	9f e0       	ldi	r25, 0x0F	; 15
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <LCD_WriteCommand+0x32>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <LCD_WriteCommand+0x38>
 27e:	00 00       	nop
 280:	40 e0       	ldi	r20, 0x00	; 0
 282:	62 e0       	ldi	r22, 0x02	; 2
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinValue>
 28a:	20 e1       	ldi	r18, 0x10	; 16
 28c:	c2 9f       	mul	r28, r18
 28e:	c0 01       	movw	r24, r0
 290:	11 24       	eor	r1, r1
 292:	9b b3       	in	r25, 0x1b	; 27
 294:	9f 70       	andi	r25, 0x0F	; 15
 296:	89 2b       	or	r24, r25
 298:	8b bb       	out	0x1b, r24	; 27
 29a:	41 e0       	ldi	r20, 0x01	; 1
 29c:	62 e0       	ldi	r22, 0x02	; 2
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinValue>
 2a4:	8f e9       	ldi	r24, 0x9F	; 159
 2a6:	9f e0       	ldi	r25, 0x0F	; 15
 2a8:	01 97       	sbiw	r24, 0x01	; 1
 2aa:	f1 f7       	brne	.-4      	; 0x2a8 <LCD_WriteCommand+0x62>
 2ac:	00 c0       	rjmp	.+0      	; 0x2ae <LCD_WriteCommand+0x68>
 2ae:	00 00       	nop
 2b0:	40 e0       	ldi	r20, 0x00	; 0
 2b2:	62 e0       	ldi	r22, 0x02	; 2
 2b4:	80 e0       	ldi	r24, 0x00	; 0
 2b6:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinValue>
 2ba:	8f e1       	ldi	r24, 0x1F	; 31
 2bc:	9e e4       	ldi	r25, 0x4E	; 78
 2be:	01 97       	sbiw	r24, 0x01	; 1
 2c0:	f1 f7       	brne	.-4      	; 0x2be <LCD_WriteCommand+0x78>
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <LCD_WriteCommand+0x7e>
 2c4:	00 00       	nop
 2c6:	cf 91       	pop	r28
 2c8:	08 95       	ret

000002ca <LCD_Init>:
 2ca:	41 e0       	ldi	r20, 0x01	; 1
 2cc:	63 e0       	ldi	r22, 0x03	; 3
 2ce:	80 e0       	ldi	r24, 0x00	; 0
 2d0:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 2d4:	41 e0       	ldi	r20, 0x01	; 1
 2d6:	62 e0       	ldi	r22, 0x02	; 2
 2d8:	80 e0       	ldi	r24, 0x00	; 0
 2da:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 2de:	41 e0       	ldi	r20, 0x01	; 1
 2e0:	60 e0       	ldi	r22, 0x00	; 0
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 2e8:	41 e0       	ldi	r20, 0x01	; 1
 2ea:	61 e0       	ldi	r22, 0x01	; 1
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 2f2:	41 e0       	ldi	r20, 0x01	; 1
 2f4:	62 e0       	ldi	r22, 0x02	; 2
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 2fc:	41 e0       	ldi	r20, 0x01	; 1
 2fe:	64 e0       	ldi	r22, 0x04	; 4
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 306:	2f ef       	ldi	r18, 0xFF	; 255
 308:	81 ee       	ldi	r24, 0xE1	; 225
 30a:	94 e0       	ldi	r25, 0x04	; 4
 30c:	21 50       	subi	r18, 0x01	; 1
 30e:	80 40       	sbci	r24, 0x00	; 0
 310:	90 40       	sbci	r25, 0x00	; 0
 312:	e1 f7       	brne	.-8      	; 0x30c <LCD_Init+0x42>
 314:	00 c0       	rjmp	.+0      	; 0x316 <LCD_Init+0x4c>
 316:	00 00       	nop
 318:	83 e3       	ldi	r24, 0x33	; 51
 31a:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommand>
 31e:	82 e3       	ldi	r24, 0x32	; 50
 320:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommand>
 324:	88 e2       	ldi	r24, 0x28	; 40
 326:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommand>
 32a:	8c e0       	ldi	r24, 0x0C	; 12
 32c:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommand>
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommand>
 336:	86 e0       	ldi	r24, 0x06	; 6
 338:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommand>
 33c:	82 e0       	ldi	r24, 0x02	; 2
 33e:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommand>
 342:	8f e1       	ldi	r24, 0x1F	; 31
 344:	9e e4       	ldi	r25, 0x4E	; 78
 346:	01 97       	sbiw	r24, 0x01	; 1
 348:	f1 f7       	brne	.-4      	; 0x346 <LCD_Init+0x7c>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <LCD_Init+0x82>
 34c:	00 00       	nop
 34e:	08 95       	ret

00000350 <LCD_WriteData>:
 350:	cf 93       	push	r28
 352:	c8 2f       	mov	r28, r24
 354:	41 e0       	ldi	r20, 0x01	; 1
 356:	63 e0       	ldi	r22, 0x03	; 3
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinValue>
 35e:	40 e0       	ldi	r20, 0x00	; 0
 360:	62 e0       	ldi	r22, 0x02	; 2
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinValue>
 368:	8b b3       	in	r24, 0x1b	; 27
 36a:	9c 2f       	mov	r25, r28
 36c:	90 7f       	andi	r25, 0xF0	; 240
 36e:	8f 70       	andi	r24, 0x0F	; 15
 370:	89 2b       	or	r24, r25
 372:	8b bb       	out	0x1b, r24	; 27
 374:	41 e0       	ldi	r20, 0x01	; 1
 376:	62 e0       	ldi	r22, 0x02	; 2
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinValue>
 37e:	8f e9       	ldi	r24, 0x9F	; 159
 380:	9f e0       	ldi	r25, 0x0F	; 15
 382:	01 97       	sbiw	r24, 0x01	; 1
 384:	f1 f7       	brne	.-4      	; 0x382 <LCD_WriteData+0x32>
 386:	00 c0       	rjmp	.+0      	; 0x388 <LCD_WriteData+0x38>
 388:	00 00       	nop
 38a:	40 e0       	ldi	r20, 0x00	; 0
 38c:	62 e0       	ldi	r22, 0x02	; 2
 38e:	80 e0       	ldi	r24, 0x00	; 0
 390:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinValue>
 394:	20 e1       	ldi	r18, 0x10	; 16
 396:	c2 9f       	mul	r28, r18
 398:	c0 01       	movw	r24, r0
 39a:	11 24       	eor	r1, r1
 39c:	9b b3       	in	r25, 0x1b	; 27
 39e:	9f 70       	andi	r25, 0x0F	; 15
 3a0:	89 2b       	or	r24, r25
 3a2:	8b bb       	out	0x1b, r24	; 27
 3a4:	41 e0       	ldi	r20, 0x01	; 1
 3a6:	62 e0       	ldi	r22, 0x02	; 2
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinValue>
 3ae:	8f e9       	ldi	r24, 0x9F	; 159
 3b0:	9f e0       	ldi	r25, 0x0F	; 15
 3b2:	01 97       	sbiw	r24, 0x01	; 1
 3b4:	f1 f7       	brne	.-4      	; 0x3b2 <LCD_WriteData+0x62>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <LCD_WriteData+0x68>
 3b8:	00 00       	nop
 3ba:	40 e0       	ldi	r20, 0x00	; 0
 3bc:	62 e0       	ldi	r22, 0x02	; 2
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinValue>
 3c4:	8f e1       	ldi	r24, 0x1F	; 31
 3c6:	9e e4       	ldi	r25, 0x4E	; 78
 3c8:	01 97       	sbiw	r24, 0x01	; 1
 3ca:	f1 f7       	brne	.-4      	; 0x3c8 <LCD_WriteData+0x78>
 3cc:	00 c0       	rjmp	.+0      	; 0x3ce <LCD_WriteData+0x7e>
 3ce:	00 00       	nop
 3d0:	cf 91       	pop	r28
 3d2:	08 95       	ret

000003d4 <LCD_WriteString>:

void LCD_WriteString(uint8* Str)
{
 3d4:	0f 93       	push	r16
 3d6:	1f 93       	push	r17
 3d8:	cf 93       	push	r28
 3da:	8c 01       	movw	r16, r24
	uint8 i = 0;
 3dc:	c0 e0       	ldi	r28, 0x00	; 0
	while(Str[i] != '\0')
 3de:	03 c0       	rjmp	.+6      	; 0x3e6 <LCD_WriteString+0x12>
	{
		LCD_WriteData(Str[i]);
 3e0:	0e 94 a8 01 	call	0x350	; 0x350 <LCD_WriteData>
		i++;
 3e4:	cf 5f       	subi	r28, 0xFF	; 255
}

void LCD_WriteString(uint8* Str)
{
	uint8 i = 0;
	while(Str[i] != '\0')
 3e6:	f8 01       	movw	r30, r16
 3e8:	ec 0f       	add	r30, r28
 3ea:	f1 1d       	adc	r31, r1
 3ec:	80 81       	ld	r24, Z
 3ee:	81 11       	cpse	r24, r1
 3f0:	f7 cf       	rjmp	.-18     	; 0x3e0 <LCD_WriteString+0xc>
	{
		LCD_WriteData(Str[i]);
		i++;
	}
}
 3f2:	cf 91       	pop	r28
 3f4:	1f 91       	pop	r17
 3f6:	0f 91       	pop	r16
 3f8:	08 95       	ret

000003fa <main>:

#include "LCD.h"

int main(void)
{
	LCD_Init();
 3fa:	0e 94 65 01 	call	0x2ca	; 0x2ca <LCD_Init>
	LCD_WriteString("Hello World");
 3fe:	80 e6       	ldi	r24, 0x60	; 96
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <LCD_WriteString>
 406:	ff cf       	rjmp	.-2      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>

00000408 <_exit>:
 408:	f8 94       	cli

0000040a <__stop_program>:
 40a:	ff cf       	rjmp	.-2      	; 0x40a <__stop_program>
